// <auto-generated />
using AppAutos.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppAutos.DataAccess.Migrations
{
    [DbContext(typeof(VehiculoDbContext))]
    [Migration("20220805162007_ver2")]
    partial class ver2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppAutos.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("Colores");
                });

            modelBuilder.Entity("AppAutos.Models.Combustible", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("Combustibles");
                });

            modelBuilder.Entity("AppAutos.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("AppAutos.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("marcas");
                });

            modelBuilder.Entity("AppAutos.Models.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("paises");
                });

            modelBuilder.Entity("AppAutos.Models.Seguro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("Seguros");
                });

            modelBuilder.Entity("AppAutos.Models.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("tipos");
                });

            modelBuilder.Entity("AppAutos.Models.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Anio")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("anio");

                    b.Property<int>("ColorId")
                        .HasColumnType("int")
                        .HasColumnName("id_color");

                    b.Property<int>("CombustibleId")
                        .HasColumnType("int")
                        .HasColumnName("id_combustible");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int")
                        .HasColumnName("id_estado");

                    b.Property<int>("Kilometros")
                        .HasColumnType("int")
                        .HasColumnName("kilometros");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    b.Property<int>("MaxVelocidad")
                        .HasColumnType("int")
                        .HasColumnName("max_velocidad");

                    b.Property<int>("Modelo")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("id_modelo");

                    b.Property<int>("PaisId")
                        .HasColumnType("int")
                        .HasColumnName("id_pais");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio");

                    b.Property<int>("Puertas")
                        .HasColumnType("int")
                        .HasColumnName("puertas");

                    b.Property<int>("SeguroId")
                        .HasColumnType("int")
                        .HasColumnName("id_seguro");

                    b.Property<int>("TipoId")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("CombustibleId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("PaisId");

                    b.HasIndex("SeguroId");

                    b.HasIndex("TipoId");

                    b.ToTable("vehiculos");
                });

            modelBuilder.Entity("AppAutos.Models.Vehiculo", b =>
                {
                    b.HasOne("AppAutos.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAutos.Models.Combustible", "Combustible")
                        .WithMany()
                        .HasForeignKey("CombustibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAutos.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAutos.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAutos.Models.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAutos.Models.Seguro", "Seguro")
                        .WithMany()
                        .HasForeignKey("SeguroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAutos.Models.Tipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Combustible");

                    b.Navigation("Estado");

                    b.Navigation("Marca");

                    b.Navigation("Pais");

                    b.Navigation("Seguro");

                    b.Navigation("Tipo");
                });
#pragma warning restore 612, 618
        }
    }
}
